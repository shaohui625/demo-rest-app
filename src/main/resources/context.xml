<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    
    <context:annotation-config />

    <context:property-placeholder location="classpath:/db.properties" />

    <!-- database setup -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="jdbcUrl" value="${db.url}" />
        <property name="driverClass" value="${db.driverClassName}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <property name="acquireIncrement" value="5" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="maxStatements" value="50" />
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="examplePU" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="packagesToScan">
            <array>
                <value>com.demo.web.entity</value>
            </array>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <jpa:repositories base-package="com.demo.web.repository" 
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"
                      repository-impl-postfix="CustomImpl" />
    
    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

    <context:component-scan base-package="com.demo.web" />
    
    <!-- spring security setup -->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg value="6" />
    </bean>
    
    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider
            user-service-ref="userRepository">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http realm="Protected API" use-expressions="true"
                   auto-config="false" create-session="stateless" entry-point-ref="unauthorizedEntryPoint"
                   authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter"
                                position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/rest/user/authenticate"
                                access="permitAll" />
        <security:intercept-url method="GET" pattern="/rest/news/**"
                                access="hasRole('user')" />
        <security:intercept-url method="PUT" pattern="/rest/news/**"
                                access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/rest/news/**"
                                access="hasRole('admin')" />
        <security:intercept-url method="DELETE"
                                pattern="/rest/news/**" access="hasRole('admin')" />
    </security:http>

</beans>